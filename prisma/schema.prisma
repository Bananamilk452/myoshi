// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid(7))
  email      String     @unique
  password   Password?
  characters Character[]
  chats      Chat[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Password {
  hash   String
  userId String @id @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Character {
  id               String           @id @default(uuid(7))
  userId           String
  user             User             @relation(fields: [userId], references: [id])
  nickname         String
  name             String
  chats            Chat[]
  systemPromptVersion String
  systemPrompt     SystemPrompt     @relation(fields: [systemPromptVersion], references: [version])
  characterPrompt  CharacterPrompt?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model SystemPrompt {
  version       String      @id
  prompt        String
  description   String
  characters    Character[]
}

model UserPrompt {
  version          String           @id
  prompt           String
  description      String
  variables        Json
  characterPrompts CharacterPrompt[]
}

model CharacterPrompt {
  id            String     @id @default(uuid(7))
  character     Character  @relation(fields: [characterId], references: [id])
  characterId   String     @unique
  userPromptVersion String
  userPrompt    UserPrompt @relation(fields: [userPromptVersion], references: [version])
  variables     Json?
}

model Chat {
  id          String    @id @default(uuid(7))
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  characterId String
  character   Character @relation(fields: [characterId], references: [id])
  role        String
  message     String
  createdAt   DateTime  @default(now())
}